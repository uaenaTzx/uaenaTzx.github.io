<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://uaenaTzx.github.io</id>
    <title>Uaena_blog</title>
    <updated>2022-05-23T13:12:29.439Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://uaenaTzx.github.io"/>
    <link rel="self" href="https://uaenaTzx.github.io/atom.xml"/>
    <subtitle>菜狗tzx的笔记博客🐕</subtitle>
    <logo>https://uaenaTzx.github.io/images/avatar.png</logo>
    <icon>https://uaenaTzx.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Uaena_blog</rights>
    <entry>
        <title type="html"><![CDATA[css的伪类和伪元素]]></title>
        <id>https://uaenaTzx.github.io/post/css-de-wei-lei/</id>
        <link href="https://uaenaTzx.github.io/post/css-de-wei-lei/">
        </link>
        <updated>2022-05-23T12:36:31.000Z</updated>
        <content type="html"><![CDATA[<p>1</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[class属性能否拥有多个属性值？]]></title>
        <id>https://uaenaTzx.github.io/post/class-shu-xing-neng-fou-yong-you-duo-ge-shu-xing-zhi/</id>
        <link href="https://uaenaTzx.github.io/post/class-shu-xing-neng-fou-yong-you-duo-ge-shu-xing-zhi/">
        </link>
        <updated>2022-05-23T11:59:24.000Z</updated>
        <content type="html"><![CDATA[<p>答案是肯定的，但是当<code>class</code>拥有多个属性值时，会出现什么变化呢？<br>
简而言之，多个样式<font color="red">(用空格分开)</font>定义最终会叠加在一起应用到当前元素👦，这样就把复杂的样式拆分开来，便于后续的修改调整。</p>
<p>比较常用的就有<code>clearfix</code>操作(此处参考《css高度塌陷的解决》)<br>
代码如下：</p>
<pre><code>&lt;div class=&quot;box1 clearfix&quot;&gt;
    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;style type=&quot;text/css&quot;&gt;
.box1 {
  border: 10px red solid;
}

.box2 {
  width: 100px;
  height: 100px;
  background-color: blue;
  float: left;
}

/* 要加的属性 */
.clearfix:after {
  content: &quot;&quot;; /* 添加内容为空 */
  clear: both; /* 清楚两侧浮动 */
  display: block; /* 转换元素类型为块元素 */
  height: 0;
  overflow: hidden; /* 溢出隐藏属性 */
  visibility: hidden; /* 隐藏属性 */
}
&lt;/style&gt;
</code></pre>
<p>可以观察到<code>&lt;div class=&quot;box1 clearfix&quot;&gt;</code>中，两个class的属性值得样式最后会合并，巧妙地解决了高度塌陷问题</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[css高度塌陷的解决]]></title>
        <id>https://uaenaTzx.github.io/post/css-gao-du-ta-xian-de-jie-jue/</id>
        <link href="https://uaenaTzx.github.io/post/css-gao-du-ta-xian-de-jie-jue/">
        </link>
        <updated>2022-05-23T06:24:45.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-什么是高度塌陷">一、什么是高度塌陷？</h1>
<p>当父元素不设置高度<font color="red">(由子元素高度决定)</font>且子元素浮动后，父元素就会高度塌陷，这样会导致整个页面的布局混乱。</p>
<h1 id="二-如何解决高度塌陷">二、如何解决高度塌陷？</h1>
<p>以下，总结了几种方法：</p>
<p>①给父元素设置固定的高度<br>
=&gt; 弊端：无法使父元素高度自适应</p>
<p>②给父元素设置<code>overflow：hidden</code>，解决高度塌陷并能实现高度自适应的方法<br>
=&gt; 弊端：当内容超出父元素以外时，超出的内容就会被隐藏！</p>
<p>③添加一个空元素，并且给他设置清除浮动的属性(<code>clear:both</code>)<br>
=&gt; 弊端：会添加很多空标记，增加结构负担，产生代码冗余；<br>
<strong>注：布局时可以通过空元素(如：el-col)巧妙地进行占位，可以对边框设置<code>border:1px solid white</code></strong></p>
<p>④将父元素类型转换为表格(给父元素添加<code>display：table</code>)<br>
=&gt; 弊端：会改变当前元素的元素类型，引发其他问题</p>
<p>⑤通过<code>:after</code>伪类元素添加一个空白的块元素，同时给父类元素加上clear_fix的类名<br>
=&gt; 推荐使用，几乎没有弊端<br>
相关代码如下：</p>
<pre><code>&lt;div class=&quot;box1 clearfix&quot;&gt;
   &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;style type=&quot;text/css&quot;&gt;
.box1 {
 border: 10px red solid;
}

.box2 {
 width: 100px;
 height: 100px;
 background-color: blue;
 float: left;
}

/* 要加的属性 */
.clearfix:after {
 content: &quot;&quot;; /* 添加内容为空 */
 clear: both; /* 清楚两侧浮动 */
 display: block; /* 转换元素类型为块元素 */
 height: 0;
 overflow: hidden; /* 溢出隐藏属性 */
 visibility: hidden; /* 隐藏属性 */
}
&lt;/style&gt;
</code></pre>
<p>代码至此，又出现了很多可以去学习的问题，如伪类的使用、<code>class</code>带多属性值、<code>visibility</code>与<code>display</code>的区别。这三个问题将会在后续的文章中一一提及。</p>
]]></content>
    </entry>
</feed>