<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://uaenaTzx.github.io</id>
    <title>Uaena_blog</title>
    <updated>2023-01-10T09:02:58.875Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://uaenaTzx.github.io"/>
    <link rel="self" href="https://uaenaTzx.github.io/atom.xml"/>
    <subtitle>菜狗tzx的笔记博客🐕</subtitle>
    <logo>https://uaenaTzx.github.io/images/avatar.png</logo>
    <icon>https://uaenaTzx.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, Uaena_blog</rights>
    <entry>
        <title type="html"><![CDATA[CSS选择器权重]]></title>
        <id>https://uaenaTzx.github.io/post/css-xuan-ze-qi-quan-chong/</id>
        <link href="https://uaenaTzx.github.io/post/css-xuan-ze-qi-quan-chong/">
        </link>
        <updated>2022-12-25T03:30:58.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-问题引入">一、问题引入</h1>
<p>相信大家都清楚css有独立的优先级计算方式，但不一定清楚优先级不仅仅局限于<strong>行间&gt;内联&gt;外联</strong>，<strong>ID&gt;class&gt;元素</strong>。<br>
本文将基于优先级的计算方式对权重的概念进行引入</p>
<h1 id="二-样式类型">二、样式类型</h1>
<h2 id="21行间">2.1行间</h2>
<pre><code>&lt;div style=&quot;width:100%&quot;&gt;xxx&lt;/div&gt;
</code></pre>
<h2 id="22内联">2.2内联</h2>
<pre><code>&lt;style&gt;
   div{
      width:100%;
      }
&lt;/style&gt;
</code></pre>
<h2 id="23外联">2.3外联</h2>
<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;&gt;
</code></pre>
<h1 id="三-选择器类型">三、选择器类型</h1>
<h2 id="31-id-id">3.1、ID　　#id</h2>
<h2 id="32-class-class">3.2、class　　.class</h2>
<h2 id="33-标签-html">3.3、标签　　html</h2>
<h2 id="34-通用">3.4、通用　　*</h2>
<h2 id="35-属性-typetext">3.5、属性　　[type=&quot;text&quot;]</h2>
<h2 id="36-伪类-hover">3.6、伪类　　：hover</h2>
<h2 id="37-伪元素-first-line">3.7、伪元素　　::first-line</h2>
<h2 id="38-子选择器-相邻选择器">3.8、子选择器、相邻选择器</h2>
<h1 id="四-权重计算规则">四、权重计算规则</h1>
<p>优先级本质上是基于权重进行排序的，以下是优先级的规则：<br>
①第一等：代表行间样式，如: style=””，权值 +1000。<br>
②第二等：代表ID选择器，如：#content，权值 +100。<br>
③第三等：代表类，伪类和属性选择器，如.content，权值 +10。<br>
④第四等：代表类型选择器和伪元素选择器，如div p，权值 +1。<br>
⑤通配符、子选择器、相邻选择器等的。如*、&gt;、+,权值 +0。<br>
⑥继承的样式没有权值。</p>
<p>权值的比较规则也比较特殊：<br>
①1,0,0,0 &gt; 0,99,99,99。也就是说从左往右逐个等级比较，前一等级相等才往后比。<br>
②无论是行间、内联和外联样式，都是按照这个规则来进行比较。而不是直观的行间&gt;内联&gt;外联样式；<br>
③在权重相同的情况下，后面的样式会覆盖掉前面的样式。<br>
④通配符、子选择器、相邻选择器等的。虽然权值为0000，但是也比继承的样式优先。</p>
<p>以下给出具体的选择器优先级比较例子：<br>
<img src="https://uaenaTzx.github.io/post-images/1673339420227.jpg" alt="" loading="lazy"><br>
通过以上例子，相信大家对选择器权重的计算会有更清晰的认知</p>
<h1 id="五-important">五、!important</h1>
<p>!important的作用是提升优先级为最高</p>
<pre><code>&lt;style&gt;
    p{
        color:grey !important;
    }
&lt;/style&gt;
&lt;p style=&quot;color:red;&quot;&gt;灰色&lt;/p&gt;　
</code></pre>
<p>但是对于ie6会有一些bug</p>
<pre><code>&lt;style&gt;
    p{
        color:grey !important;
        color:blue;
    }
&lt;/style&gt;
&lt;p style=&quot;color:red;&quot;&gt;蓝色&lt;/p&gt;　
</code></pre>
<p>当然ie6只是对以上的形式存在bug，解决方法如下：</p>
<pre><code>&lt;style&gt;
    p{
        color:grey !important;
    }
    p{
        color:blue;
    }
&lt;/style&gt;
&lt;p style=&quot;color:red;&quot;&gt;灰色&lt;/p&gt;　
</code></pre>
<h1 id="六-关键词收录">六、关键词收录</h1>
<p>①权重<br>
②样式类型<br>
③选择器类型<br>
④!important</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[a标签包裹div标签是否合法？]]></title>
        <id>https://uaenaTzx.github.io/post/wei-shi-me-agreaterdiv-shi-he-fa-de/</id>
        <link href="https://uaenaTzx.github.io/post/wei-shi-me-agreaterdiv-shi-he-fa-de/">
        </link>
        <updated>2022-12-24T13:07:59.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一-问题引入">一、问题引入</h1>
<p>先上结论：<strong>看父元素的属性</strong><br>
众所周知，块级标签，行内标签，行内块标签是存在嵌套规则的，首先我们给出定义<br>
块级标签：独立一行，对宽高的属性值生效；默认为浏览器宽度——100%；<br>
行内标签：可多个共享一行，对宽高属性值不生效（内容撑开）；<br>
行内块标签：可多个共享一行，对宽高的属性值生效；<br>
嵌套规则如下：块级可以包含行内，行内不可包含块级。</p>
<h1 id="二-结论解释">二、结论解释</h1>
<p>那为何会出现以下的情况呢？</p>
<pre><code>&lt;div&gt;
    &lt;a href=&quot;#&quot;&gt;
        &lt;div&gt;button&lt;/div&gt;
    &lt;/a&gt;  
&lt;/div&gt;
</code></pre>
<p>按照嵌套规则来说，是不合理的，这就需要去W3C的官网了解a标签的具体属性：<br>
a含有transparent属性，因此在浏览器解析后，嵌套规则会由其父元素决定，当父元素为块级元素时，内部显然可以包含块级元素，而当父元素为行内元素时，内部就不能包含块级元素<br>
举例如下：</p>
<pre><code>&lt;span&gt;
    &lt;a href=&quot;#&quot;&gt;
        &lt;div&gt;button&lt;/div&gt;
    &lt;/a&gt;  
&lt;/span&gt;
</code></pre>
<h1 id="三-更多细节">三、更多细节</h1>
<p>在开发过程中，下面这段代码在浏览器的解析上出现了大问题：</p>
<pre><code>&lt;a href=&quot;#&quot;&gt;
    &lt;div&gt;
        &lt;!-- xxxxx --&gt;
        &lt;a href=&quot;#&quot;&gt;button&lt;/a&gt;
    &lt;/div&gt;
&lt;/a&gt;
</code></pre>
<p>浏览器的解析结果如下:</p>
<pre><code>&lt;a href=&quot;#&quot;&gt;&lt;/a&gt;
&lt;div&gt;
	&lt;a href=&quot;#&quot;&gt;
    	&lt;!-- xxxxx --&gt;
    &lt;/a&gt;
	&lt;a href=&quot;#&quot;&gt;buttton&lt;/a&gt;
&lt;/div&gt;
</code></pre>
<p>差异为何会如此奇妙？？？😅😅😅<br>
首先我们从浏览器的解析结果分析问题：当html代码不合规时，浏览器会依据内部的一套复杂的补救措施对不合规的代码进行调整，使得html代码能被顺利解析。因此，我们锁定到问题的根源在于没有遵守嵌套规则，因此，我们需要再从W3C官网中深入a标签的规则</p>
<pre><code>The a element may be wrapped around entire paragraphs, lists, tables, and so 
forth, even entire sections, so long as there is no interactive content 
within (e.g., buttons or other links).

只要在其中没有交互式内容（例如，按钮或其他链接），
a元素可以围绕整个段落，列表，表格等，甚至整个部分。
</code></pre>
<p>显然，a标签围绕的块级标签中存在交互式内容，因此我们再次得出结论：链接不可包含交互式内容！</p>
<h1 id="四-关键词收录">四、关键词收录</h1>
<p>①三类标签属性<br>
②嵌套规则<br>
③a标签包裹div的情况分析<br>
④浏览器解析不合规html代码<br>
⑤a标签不可内包裹交互式内容</p>
]]></content>
    </entry>
</feed>