<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://uaenaTzx.github.io</id>
    <title>Uaena_blog</title>
    <updated>2022-05-24T08:48:28.954Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://uaenaTzx.github.io"/>
    <link rel="self" href="https://uaenaTzx.github.io/atom.xml"/>
    <subtitle>菜狗tzx的笔记博客🐕</subtitle>
    <logo>https://uaenaTzx.github.io/images/avatar.png</logo>
    <icon>https://uaenaTzx.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Uaena_blog</rights>
    <entry>
        <title type="html"><![CDATA[css的伪类和伪元素]]></title>
        <id>https://uaenaTzx.github.io/post/css-de-wei-lei/</id>
        <link href="https://uaenaTzx.github.io/post/css-de-wei-lei/">
        </link>
        <updated>2022-05-23T12:36:31.000Z</updated>
        <content type="html"><![CDATA[<p>什么是伪类和伪元素？<br>
接下来，文章会从“区分伪类和伪元素”和“部分实用的伪类和伪元素应用”来加深读者对此的认知。</p>
<h1 id="一-区分伪类和伪元素">一、区分伪类和伪元素</h1>
<p><code>CSS3</code>之后，伪元素才从伪类之中被分类出来，如我们常用的<code>:before</code>和<code>:after</code>。<br>
实际上css3为了区分两者，已经明确规定了伪类用一个冒号来表示，而伪元素则用两个冒号来表示(部分伪元素一个冒号也可行)<br>
如何区分伪元素和伪类？我们需要记住以下两点：<br>
①.伪类表示被选择元素的处于的某种状态，最常用的有<code>:hover</code>、<code>:active</code>……<br>
②.伪元素表示目标元素的某个部分，虽然这个部分像是一个独立的元素，但其实是&quot;假元素&quot;，只存在于css中，例如<code>:before</code>和<code>:after</code></p>
<p>however，由于伪类和伪元素的数量太多了，我们只需要熟练运用部分常用的伪类和伪元素即可，下面我们来尝试运用一下常用的伪类和伪元素。👊👊👊</p>
<h1 id="二-常见伪类和伪元素的基本应用">二、常见伪类和伪元素的基本应用</h1>
<p>①伪元素的应用：<code>before</code>、<code>after</code>、<code>first-letter</code>、<code>first-line</code>、<code>selection</code>和<code>placeholder</code>，分别表示元素内容的前面、元素内容的后面、第一个文字、第一行文字、选中部分以及占位的文本</p>
<p>示例代码如下：</p>
<pre><code>div.box1{
    border: 1px black solid;
    background: grey;
    background-clip: content-box;
    width: 300px;
    padding: 20px;
}

/* 伪元素before和after */
div.box1:before{
    content: &quot;before&quot;;
    color: rgb(177, 81, 13);
}
div.box1:after{
    content: &quot;after&quot;;
    color: rgb(243, 29, 72);
}

/* 伪元素:first-letter和:first-line*/
div.box2:first-letter{
    font-size: 3em;
    font-weight: bold;
}
div.box2:first-line{
    color: red;
}

/* 伪元素::section和::placeholder*/
div.section::selection{
    color: blue;
}
input.placeholder::placeholder{
    background-color: red;
    color: blue;
}
</code></pre>
<p>需要注意的是，<font color="red">伪元素的前缀有&quot;:&quot;和&quot;::&quot;</font></p>
<p>②伪类的应用：状态类伪类是最常用的，<code>link</code>、<code>visited</code>、<code>hover</code>、<code>active</code>和<code>focus</code>，分别表示正常状态下的链接、点击后、悬停时、被激活时和聚焦时<br>
注：<br>
1.<code>focus</code>表示元素获得光标焦点时的<code>style</code>，主要用于文本框输入文字时使用（鼠标松开时显示的<code>style</code>）<br>
2.<code>link</code>表示链接在正常情况下显示的颜色<br>
3.<code>visited</code>表示链接被点击后显示的颜色</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[class属性能否拥有多个属性值？]]></title>
        <id>https://uaenaTzx.github.io/post/class-shu-xing-neng-fou-yong-you-duo-ge-shu-xing-zhi/</id>
        <link href="https://uaenaTzx.github.io/post/class-shu-xing-neng-fou-yong-you-duo-ge-shu-xing-zhi/">
        </link>
        <updated>2022-05-23T11:59:24.000Z</updated>
        <content type="html"><![CDATA[<p>答案是肯定的，但是当<code>class</code>拥有多个属性值时，会出现什么变化呢？<br>
简而言之，多个样式<font color="red">(用空格分开)</font>定义最终会叠加在一起应用到当前元素👦，这样就把复杂的样式拆分开来，便于后续的修改调整。</p>
<p>比较常用的就有<code>clearfix</code>操作(此处参考《css高度塌陷的解决》)<br>
代码如下：</p>
<pre><code>&lt;div class=&quot;box1 clearfix&quot;&gt;
    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;style type=&quot;text/css&quot;&gt;
.box1 {
  border: 10px red solid;
}

.box2 {
  width: 100px;
  height: 100px;
  background-color: blue;
  float: left;
}

/* 要加的属性 */
.clearfix:after {
  content: &quot;&quot;; /* 添加内容为空 */
  clear: both; /* 清楚两侧浮动 */
  display: block; /* 转换元素类型为块元素 */
  height: 0;
  overflow: hidden; /* 溢出隐藏属性 */
  visibility: hidden; /* 隐藏属性 */
}
&lt;/style&gt;
</code></pre>
<p>可以观察到<code>&lt;div class=&quot;box1 clearfix&quot;&gt;</code>中，两个class的属性值得样式最后会合并，巧妙地解决了高度塌陷问题</p>
]]></content>
    </entry>
</feed>